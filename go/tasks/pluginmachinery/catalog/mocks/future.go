// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import catalog "github.com/lyft/flyteplugins/go/tasks/pluginmachinery/catalog"
import mock "github.com/stretchr/testify/mock"

// Future is an autogenerated mock type for the Future type
type Future struct {
	mock.Mock
}

type Future_GetResponseStatus struct {
	*mock.Call
}

func (_m Future_GetResponseStatus) Return(_a0 catalog.ResponseStatus) *Future_GetResponseStatus {
	return &Future_GetResponseStatus{Call: _m.Call.Return(_a0)}
}

func (_m *Future) OnGetResponseStatus() *Future_GetResponseStatus {
	c := _m.On("GetResponseStatus")
	return &Future_GetResponseStatus{Call: c}
}
func (_m *Future) OnGetResponseStatusMatch(matchers ...interface{}) *Future_GetResponseStatus {
	c := _m.On("GetResponseStatus", matchers...)
	return &Future_GetResponseStatus{Call: c}
}

// GetResponseStatus provides a mock function with given fields:
func (_m *Future) GetResponseStatus() catalog.ResponseStatus {
	ret := _m.Called()

	var r0 catalog.ResponseStatus
	if rf, ok := ret.Get(0).(func() catalog.ResponseStatus); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(catalog.ResponseStatus)
	}

	return r0
}
