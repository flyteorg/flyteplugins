// Code generated by "enumer -type=Phase -trimprefix=Phase"; DO NOT EDIT.

package webapi

import (
	"fmt"
)

const _PhaseName = "NotStartedAllocationTokenAcquiredResourcesCreatedSucceededUserFailureSystemFailure"

var _PhaseIndex = [...]uint8{0, 10, 33, 49, 58, 69, 82}

func (i Phase) String() string {
	if i < 0 || i >= Phase(len(_PhaseIndex)-1) {
		return fmt.Sprintf("Phase(%d)", i)
	}
	return _PhaseName[_PhaseIndex[i]:_PhaseIndex[i+1]]
}

var _PhaseValues = []Phase{0, 1, 2, 3, 4, 5}

var _PhaseNameToValueMap = map[string]Phase{
	_PhaseName[0:10]:  0,
	_PhaseName[10:33]: 1,
	_PhaseName[33:49]: 2,
	_PhaseName[49:58]: 3,
	_PhaseName[58:69]: 4,
	_PhaseName[69:82]: 5,
}

// PhaseString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func PhaseString(s string) (Phase, error) {
	if val, ok := _PhaseNameToValueMap[s]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to Phase values", s)
}

// PhaseValues returns all values of the enum
func PhaseValues() []Phase {
	return _PhaseValues
}

// IsAPhase returns "true" if the value is listed in the enum definition. "false" otherwise
func (i Phase) IsAPhase() bool {
	for _, v := range _PhaseValues {
		if i == v {
			return true
		}
	}
	return false
}
