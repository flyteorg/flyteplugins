// Code generated by "enumer --type=WorkStatus"; DO NOT EDIT.

package workqueue

import (
	"fmt"
)

const _WorkStatusName = "WorkStatusNotDoneWorkStatusSucceededWorkStatusFailed"

var _WorkStatusIndex = [...]uint8{0, 17, 36, 52}

func (i WorkStatus) String() string {
	if i >= WorkStatus(len(_WorkStatusIndex)-1) {
		return fmt.Sprintf("WorkStatus(%d)", i)
	}
	return _WorkStatusName[_WorkStatusIndex[i]:_WorkStatusIndex[i+1]]
}

var _WorkStatusValues = []WorkStatus{0, 1, 2}

var _WorkStatusNameToValueMap = map[string]WorkStatus{
	_WorkStatusName[0:17]:  0,
	_WorkStatusName[17:36]: 1,
	_WorkStatusName[36:52]: 2,
}

// WorkStatusString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func WorkStatusString(s string) (WorkStatus, error) {
	if val, ok := _WorkStatusNameToValueMap[s]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to WorkStatus values", s)
}

// WorkStatusValues returns all values of the enum
func WorkStatusValues() []WorkStatus {
	return _WorkStatusValues
}

// IsAWorkStatus returns "true" if the value is listed in the enum definition. "false" otherwise
func (i WorkStatus) IsAWorkStatus() bool {
	for _, v := range _WorkStatusValues {
		if i == v {
			return true
		}
	}
	return false
}
