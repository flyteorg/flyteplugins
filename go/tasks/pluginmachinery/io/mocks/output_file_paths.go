// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"
import storage "github.com/lyft/flytestdlib/storage"

// OutputFilePaths is an autogenerated mock type for the OutputFilePaths type
type OutputFilePaths struct {
	mock.Mock
}

// GetErrorPath provides a mock function with given fields:
func (_m *OutputFilePaths) GetErrorPath() storage.DataReference {
	ret := _m.Called()

	var r0 storage.DataReference
	if rf, ok := ret.Get(0).(func() storage.DataReference); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(storage.DataReference)
	}

	return r0
}

// GetFuturesPath provides a mock function with given fields:
func (_m *OutputFilePaths) GetFuturesPath() storage.DataReference {
	ret := _m.Called()

	var r0 storage.DataReference
	if rf, ok := ret.Get(0).(func() storage.DataReference); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(storage.DataReference)
	}

	return r0
}

// GetOutputPath provides a mock function with given fields:
func (_m *OutputFilePaths) GetOutputPath() storage.DataReference {
	ret := _m.Called()

	var r0 storage.DataReference
	if rf, ok := ret.Get(0).(func() storage.DataReference); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(storage.DataReference)
	}

	return r0
}

// GetOutputPrefixPath provides a mock function with given fields:
func (_m *OutputFilePaths) GetOutputPrefixPath() storage.DataReference {
	ret := _m.Called()

	var r0 storage.DataReference
	if rf, ok := ret.Get(0).(func() storage.DataReference); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(storage.DataReference)
	}

	return r0
}
