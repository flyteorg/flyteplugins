// Code generated by mockery v1.0.1. DO NOT EDIT.

package mocks

import (
	storage "github.com/flyteorg/flytestdlib/storage"
	mock "github.com/stretchr/testify/mock"
)

// CheckpointPaths is an autogenerated mock type for the CheckpointPaths type
type CheckpointPaths struct {
	mock.Mock
}

type CheckpointPaths_GetCheckpointPrefix struct {
	*mock.Call
}

func (_m CheckpointPaths_GetCheckpointPrefix) Return(_a0 storage.DataReference) *CheckpointPaths_GetCheckpointPrefix {
	return &CheckpointPaths_GetCheckpointPrefix{Call: _m.Call.Return(_a0)}
}

func (_m *CheckpointPaths) OnGetCheckpointPrefix() *CheckpointPaths_GetCheckpointPrefix {
	c_call := _m.On("GetCheckpointPrefix")
	return &CheckpointPaths_GetCheckpointPrefix{Call: c_call}
}

func (_m *CheckpointPaths) OnGetCheckpointPrefixMatch(matchers ...interface{}) *CheckpointPaths_GetCheckpointPrefix {
	c_call := _m.On("GetCheckpointPrefix", matchers...)
	return &CheckpointPaths_GetCheckpointPrefix{Call: c_call}
}

// GetCheckpointPrefix provides a mock function with given fields:
func (_m *CheckpointPaths) GetCheckpointPrefix() storage.DataReference {
	ret := _m.Called()

	var r0 storage.DataReference
	if rf, ok := ret.Get(0).(func() storage.DataReference); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(storage.DataReference)
	}

	return r0
}

type CheckpointPaths_GetPreviousCheckpointsPrefix struct {
	*mock.Call
}

func (_m CheckpointPaths_GetPreviousCheckpointsPrefix) Return(_a0 storage.DataReference) *CheckpointPaths_GetPreviousCheckpointsPrefix {
	return &CheckpointPaths_GetPreviousCheckpointsPrefix{Call: _m.Call.Return(_a0)}
}

func (_m *CheckpointPaths) OnGetPreviousCheckpointsPrefix() *CheckpointPaths_GetPreviousCheckpointsPrefix {
	c_call := _m.On("GetPreviousCheckpointsPrefix")
	return &CheckpointPaths_GetPreviousCheckpointsPrefix{Call: c_call}
}

func (_m *CheckpointPaths) OnGetPreviousCheckpointsPrefixMatch(matchers ...interface{}) *CheckpointPaths_GetPreviousCheckpointsPrefix {
	c_call := _m.On("GetPreviousCheckpointsPrefix", matchers...)
	return &CheckpointPaths_GetPreviousCheckpointsPrefix{Call: c_call}
}

// GetPreviousCheckpointsPrefix provides a mock function with given fields:
func (_m *CheckpointPaths) GetPreviousCheckpointsPrefix() storage.DataReference {
	ret := _m.Called()

	var r0 storage.DataReference
	if rf, ok := ret.Get(0).(func() storage.DataReference); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(storage.DataReference)
	}

	return r0
}
